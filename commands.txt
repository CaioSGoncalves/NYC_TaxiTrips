CREATE CLUSTER (Spark Version: 2.4 + 2 workers + Apache Zeppelin):
gcloud beta dataproc clusters create cluster-3bff --enable-component-gateway --region southamerica-east1 --subnet default --zone southamerica-east1-a --master-machine-type n1-standard-1 --master-boot-disk-size 100 --num-workers 2 --worker-machine-type n1-standard-1 --worker-boot-disk-size 100 --image-version 1.4-debian9 --optional-components ZEPPELIN --project sincere-bongo-264115


CREATE CLUSTER (Spark Version: 2.4 + 1 master node + Apache Zeppelin):
gcloud beta dataproc clusters create cluster-fb19 --enable-component-gateway --region southamerica-east1 --subnet default --zone southamerica-east1-a --single-node --master-machine-type n1-standard-1 --master-boot-disk-size 200 --image-version 1.4-debian9 --optional-components ZEPPELIN --project sincere-bongo-264115


SUBMIT JOB delta_lake_ingestion:
gcloud dataproc jobs submit pyspark \
    --cluster cluster-3bff --region southamerica-east1 \
    --properties spark.jars.packages=io.delta:delta-core_2.11:0.5.0 \
    gs://teste-caio/jobs/delta_lake_ingestion.py


SUBMIT JOB daily_job:
gcloud dataproc jobs submit pyspark \
    --cluster cluster-3bff --region southamerica-east1 \
    --properties spark.jars.packages=io.delta:delta-core_2.11:0.5.0 \
    gs://teste-caio/jobs/daily_job.py


SET Zeppelin spark_submit_packages:
/usr/lib/zeppelin/conf/zeppelin-env.sh
export SPARK_SUBMIT_OPTIONS="--packages io.delta:delta-core_2.11:0.5.0"
export SPARK_SUBMIT_OPTIONS="--packages io.delta:delta-core_2.11:0.5.0,org.apache.spark:spark-sql-kafka-0-10_2.11:2.4.4"


KAFKA VM in GCP Marketplace:
kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic nyc_trips
kafka-topics.sh --list --zookeeper localhost:2181

kafka-console-producer.sh --broker-list localhost:9092 --topic test
kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic test --from-beginning

gsutil cp -R gs://teste-caio/nyctaxi_trips/generate_trips/ .    



GRAFANA:
grafana-cli admin reset-admin-password --homepath "/usr/share/grafana" --config "/etc/grafana/grafana.ini" admin
sudo grafana-cli plugins install grafana-worldmap-panel

sudo service grafana-server start


Kafka-Python TripGenerator
sudo apt-get install python3-pip
sudo pip3 install kafka-python
sudo pip3 install flask

